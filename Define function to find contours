#Supplementary text-4
"""Define function to find contours"""
def contours():

    global dict_cont

    dict_cont={}
                        
   """Collecting all the threshold images"""
    for i in range(1, len_folder_path_gray):

        file=str(i)+".jpeg"

        input_file=os.path.join(folder_path_gray, file)
        
        """Reading the threshold image files"""
        image_file=cv2.imread(input_file)

        image_gray=cv2.cvtColor(image_file, cv2.COLOR_BGR2GRAY)
        (T, threshold)=cv2.threshold(image_gray, 0, 255, cv2.THRESH_BINARY_INV | cv2.THRESH_OTSU)

        """Finding the contours of the threshold images"""
        contours, hierarchy=cv2.findContours(threshold, cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_SIMPLE)
        
        dict_cont[input_file]=contours

    return dict_cont

len_folder_path_gray=len(os.listdir(folder_path_gray))

contour_file=contours()

print(contour_file)
